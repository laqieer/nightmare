{"version":3,"file":"static/js/41720.e8052ee8.chunk.js","mappings":"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","sources":["components/Input/InputDec/index.jsx","components/Input/InputSelect/index.jsx","components/Module/FE12/TerrainDataEditor/options.js","components/Module/FE12/TerrainDataEditor/index.jsx"],"sourcesContent":["import { InputNumber, Space, Typography } from 'antd';\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { DataRange, read, write } from '../../util';\n\nconst { Text } = Typography;\n\nexport default function InputDec(props) {\n  const {\n    view, name, offset, type,\n  } = props;\n\n  const currentValue = view == null ? 0 : read(view, offset, type);\n  const [oldValue, setOldValue] = useState(currentValue);\n  if (oldValue !== currentValue) {\n    setOldValue(currentValue);\n  }\n\n  return (\n    <Space>\n      <Text\n        disabled={view == null}\n      >\n        {`${name}:${view == null ? '' : ` ${oldValue} â†’`}`}\n      </Text>\n      <InputNumber\n        disabled={view == null}\n        min={DataRange[type][0]}\n        max={DataRange[type][1]}\n        onPressEnter={(e) => {\n          const v = parseInt(e.target.value, 10);\n          write(view, offset, type, v);\n          setOldValue(v);\n        }}\n        {...props}\n      />\n    </Space>\n  );\n}\n\nInputDec.propTypes = {\n  view: PropTypes.instanceOf(DataView),\n  name: PropTypes.string.isRequired,\n  offset: PropTypes.number.isRequired,\n  type: PropTypes.number.isRequired,\n};\n\nInputDec.defaultProps = {\n  view: null,\n};\n","import { Select } from 'antd';\nimport React from 'react';\n\nexport default function InputSelect(props) {\n  return (\n    <Select\n      showSearch\n      style={{ width: '100%' }}\n      placeholder=\"Search to Select\"\n      optionFilterProp=\"label\"\n      filterOption={(input, option) => option.label.includes(input)}\n      {...props}\n    />\n  );\n}\n","export const TerrainData = [\n  { label: '___ / Wall', value: 0 },\n  { label: 'Plain / Bridge / Bone', value: 1 },\n  { label: 'Forest', value: 2 },\n  { label: 'Desert', value: 3 },\n  { label: 'Ledge', value: 4 },\n  { label: 'Village', value: 5 },\n  { label: 'Closed Village', value: 6 },\n  { label: 'Ruined Village', value: 7 },\n  { label: 'House / Armory / Vendor / Arena', value: 8 },\n  { label: 'Fence', value: 9 },\n  { label: 'Fort', value: 10 },\n  { label: 'Castle Gate', value: 11 },\n  { label: 'Castle', value: 12 },\n  { label: 'Mountain', value: 13 },\n  { label: 'Cave', value: 14 },\n  { label: 'Peak', value: 15 },\n  { label: 'River', value: 16 },\n  { label: 'Sea', value: 17 },\n  { label: 'Lava', value: 18 },\n  { label: 'Floor / Stairs', value: 19 },\n  { label: 'Pillar', value: 20 },\n  { label: 'Throne', value: 21 },\n  { label: 'Chest', value: 22 },\n  { label: 'Door', value: 23 },\n  { label: 'Drawbridge', value: 24 },\n  { label: 'Altar', value: 25 },\n  { label: '???', value: 26 },\n  { label: '???', value: 27 },\n];\n\nexport default TerrainData;\n","import React from 'react';\nimport { useOutletContext, useSearchParams } from 'react-router-dom';\nimport { Space, Alert, BackTop } from 'antd';\nimport { ToTopOutlined } from '@ant-design/icons';\nimport {\n  TerrainData,\n} from './options';\nimport { DataType } from '../../../util';\nimport InputSelect from '../../../Input/InputSelect';\nimport InputDec from '../../../Input/InputDec';\n\nexport default function FE12TerrainDataEditor() {\n  const [buffer] = useOutletContext();\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const id = searchParams.get('id');\n  const address = 0xEB80;\n  const size = 4;\n  let view = null;\n\n  try {\n    view = new DataView(buffer, address + size * id, size);\n  } catch (error) {\n    view = null;\n  }\n\n  return (\n    <Space\n      direction=\"vertical\"\n      align=\"center\"\n      style={{ width: '100%' }}\n    >\n      <Alert\n        message=\"FE12 Terrain Data Editor\"\n        type=\"info\"\n      />\n      <div key={id}>\n        <InputSelect\n          disabled={view == null}\n          defaultValue={TerrainData.find(\n            (entry) => entry.value.toString() === id,\n          ) ?? id}\n          onSelect={(value) => setSearchParams({ id: value })}\n          options={TerrainData}\n        />\n      </div>\n      <InputDec\n        type={DataType.S8}\n        view={view}\n        name=\"Avoid\"\n        offset={0}\n      />\n      <InputDec\n        type={DataType.S8}\n        view={view}\n        name=\"Defense\"\n        offset={1}\n      />\n      <InputDec\n        type={DataType.S8}\n        view={view}\n        name=\"Resistance\"\n        offset={2}\n      />\n      <InputDec\n        type={DataType.S8}\n        view={view}\n        name=\"Heal\"\n        offset={3}\n      />\n\n      <BackTop>\n        <ToTopOutlined />\n      </BackTop>\n    </Space>\n  );\n}\n"],"names":["Text","Typography","InputDec","props","view","name","offset","type","currentValue","read","useState","oldValue","setOldValue","disabled","min","DataRange","max","onPressEnter","e","v","parseInt","target","value","write","defaultProps","InputSelect","showSearch","style","width","placeholder","optionFilterProp","filterOption","input","option","label","includes","TerrainData","FE12TerrainDataEditor","useOutletContext","buffer","useSearchParams","searchParams","setSearchParams","id","get","DataView","error","direction","align","message","defaultValue","find","entry","toString","onSelect","options","DataType","ToTopOutlined"],"sourceRoot":""}