{"version":3,"file":"static/js/1670.e5817dde.chunk.js","mappings":"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","sources":["components/Input/InputDec/index.jsx","components/Input/InputSelect/index.jsx","components/Module/FE12/TerrainCostDataEditor/options.js","components/Module/FE12/TerrainCostDataEditor/index.jsx"],"sourcesContent":["import { InputNumber, Space, Typography } from 'antd';\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { DataRange, read, write } from '../../util';\n\nconst { Text } = Typography;\n\nexport default function InputDec(props) {\n  const {\n    view, name, offset, type,\n  } = props;\n\n  const currentValue = view == null ? 0 : read(view, offset, type);\n  const [oldValue, setOldValue] = useState(currentValue);\n  if (oldValue !== currentValue) {\n    setOldValue(currentValue);\n  }\n\n  return (\n    <Space>\n      <Text\n        disabled={view == null}\n      >\n        {`${name}:${view == null ? '' : ` ${oldValue} â†’`}`}\n      </Text>\n      <InputNumber\n        disabled={view == null}\n        min={DataRange[type][0]}\n        max={DataRange[type][1]}\n        onPressEnter={(e) => {\n          const v = parseInt(e.target.value, 10);\n          write(view, offset, type, v);\n          setOldValue(v);\n        }}\n        {...props}\n      />\n    </Space>\n  );\n}\n\nInputDec.propTypes = {\n  view: PropTypes.instanceOf(DataView),\n  name: PropTypes.string.isRequired,\n  offset: PropTypes.number.isRequired,\n  type: PropTypes.number.isRequired,\n};\n\nInputDec.defaultProps = {\n  view: null,\n};\n","import { Select } from 'antd';\nimport React from 'react';\n\nexport default function InputSelect(props) {\n  return (\n    <Select\n      showSearch\n      style={{ width: '100%' }}\n      placeholder=\"Search to Select\"\n      optionFilterProp=\"label\"\n      filterOption={(input, option) => option.label.includes(input)}\n      {...props}\n    />\n  );\n}\n","export const TerrainCostData = [\n  { label: 'Dancer/Lord', value: 0 },\n  { label: 'Knight', value: 1 },\n  { label: 'General', value: 2 },\n  { label: 'Cavalier', value: 3 },\n  { label: 'Paladin', value: 4 },\n  { label: 'Merc/Myrm', value: 5 },\n  { label: 'Hero/Swordmaster', value: 6 },\n  { label: 'Fighter/Barbarian', value: 7 },\n  { label: 'Warrior', value: 8 },\n  { label: 'Pirate', value: 9 },\n  { label: 'Berserker', value: 10 },\n  { label: 'Thief', value: 11 },\n  { label: 'Archer', value: 12 },\n  { label: 'Sniper', value: 13 },\n  { label: 'Hunter', value: 14 },\n  { label: 'Horseman', value: 15 },\n  { label: 'Freelancer', value: 16 },\n  { label: 'Manakete', value: 17 },\n  { label: 'Magic Users', value: 18 },\n  { label: 'Unused', value: 19 },\n  { label: 'Promoted Magic Users', value: 20 },\n  { label: 'Flying', value: 21 },\n  { label: 'Dragons', value: 22 },\n  { label: 'Soldier/Emperor', value: 23 },\n  { label: 'Ballistician', value: 24 },\n  { label: 'Ice Dragon', value: 25 },\n];\n\nexport default TerrainCostData;\n","import React from 'react';\nimport { useOutletContext, useSearchParams } from 'react-router-dom';\nimport { Space, Alert, BackTop } from 'antd';\nimport { ToTopOutlined } from '@ant-design/icons';\nimport {\n  TerrainCostData,\n} from './options';\nimport { DataType } from '../../../util';\nimport InputSelect from '../../../Input/InputSelect';\nimport InputDec from '../../../Input/InputDec';\n\nexport default function FE12TerrainCostDataEditor() {\n  const [buffer] = useOutletContext();\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const id = searchParams.get('id');\n  const address = 0xEBF0;\n  const size = 28;\n  let view = null;\n\n  try {\n    view = new DataView(buffer, address + size * id, size);\n  } catch (error) {\n    view = null;\n  }\n\n  return (\n    <Space\n      direction=\"vertical\"\n      align=\"center\"\n      style={{ width: '100%' }}\n    >\n      <Alert\n        message=\"FE12 Terrain Cost Data Editor\"\n        type=\"info\"\n      />\n      <div key={id}>\n        <InputSelect\n          disabled={view == null}\n          defaultValue={TerrainCostData.find(\n            (entry) => entry.value.toString() === id,\n          ) ?? id}\n          onSelect={(value) => setSearchParams({ id: value })}\n          options={TerrainCostData}\n        />\n      </div>\n      <InputDec\n        type={DataType.S8}\n        view={view}\n        name=\"___ / Wall\"\n        offset={0}\n      />\n      <InputDec\n        type={DataType.S8}\n        view={view}\n        name=\"Plain / Bridge / Bone\"\n        offset={1}\n      />\n      <InputDec\n        type={DataType.S8}\n        view={view}\n        name=\"Forest\"\n        offset={2}\n      />\n      <InputDec\n        type={DataType.S8}\n        view={view}\n        name=\"Desert\"\n        offset={3}\n      />\n      <InputDec\n        type={DataType.S8}\n        view={view}\n        name=\"Ledge\"\n        offset={4}\n      />\n      <InputDec\n        type={DataType.S8}\n        view={view}\n        name=\"Village\"\n        offset={5}\n      />\n      <InputDec\n        type={DataType.S8}\n        view={view}\n        name=\"Closed Village\"\n        offset={6}\n      />\n      <InputDec\n        type={DataType.S8}\n        view={view}\n        name=\"Ruined Village\"\n        offset={7}\n      />\n      <InputDec\n        type={DataType.S8}\n        view={view}\n        name=\"House / Armory / Vendor / Arena\"\n        offset={8}\n      />\n      <InputDec\n        type={DataType.S8}\n        view={view}\n        name=\"Fence\"\n        offset={9}\n      />\n      <InputDec\n        type={DataType.S8}\n        view={view}\n        name=\"Fort\"\n        offset={10}\n      />\n      <InputDec\n        type={DataType.S8}\n        view={view}\n        name=\"Castle Gate\"\n        offset={11}\n      />\n      <InputDec\n        type={DataType.S8}\n        view={view}\n        name=\"Castle\"\n        offset={12}\n      />\n      <InputDec\n        type={DataType.S8}\n        view={view}\n        name=\"Mountain\"\n        offset={13}\n      />\n      <InputDec\n        type={DataType.S8}\n        view={view}\n        name=\"Cave\"\n        offset={14}\n      />\n      <InputDec\n        type={DataType.S8}\n        view={view}\n        name=\"Peak\"\n        offset={15}\n      />\n      <InputDec\n        type={DataType.S8}\n        view={view}\n        name=\"River\"\n        offset={16}\n      />\n      <InputDec\n        type={DataType.S8}\n        view={view}\n        name=\"Sea\"\n        offset={17}\n      />\n      <InputDec\n        type={DataType.S8}\n        view={view}\n        name=\"Lava\"\n        offset={18}\n      />\n      <InputDec\n        type={DataType.S8}\n        view={view}\n        name=\"Floor / Stairs\"\n        offset={19}\n      />\n      <InputDec\n        type={DataType.S8}\n        view={view}\n        name=\"Pillar\"\n        offset={20}\n      />\n      <InputDec\n        type={DataType.S8}\n        view={view}\n        name=\"Throne\"\n        offset={21}\n      />\n      <InputDec\n        type={DataType.S8}\n        view={view}\n        name=\"Chest\"\n        offset={22}\n      />\n      <InputDec\n        type={DataType.S8}\n        view={view}\n        name=\"Door\"\n        offset={23}\n      />\n      <InputDec\n        type={DataType.S8}\n        view={view}\n        name=\"Drawbridge\"\n        offset={24}\n      />\n      <InputDec\n        type={DataType.S8}\n        view={view}\n        name=\"Altar\"\n        offset={25}\n      />\n      <InputDec\n        type={DataType.S8}\n        view={view}\n        name=\"???\"\n        offset={26}\n      />\n      <InputDec\n        type={DataType.S8}\n        view={view}\n        name=\"???\"\n        offset={27}\n      />\n\n      <BackTop>\n        <ToTopOutlined />\n      </BackTop>\n    </Space>\n  );\n}\n"],"names":["Text","Typography","InputDec","props","view","name","offset","type","currentValue","read","_useState","useState","_useState2","_slicedToArray","oldValue","setOldValue","_jsxs","Space","children","_jsx","disabled","concat","InputNumber","_objectSpread","min","DataRange","max","onPressEnter","e","v","parseInt","target","value","write","defaultProps","InputSelect","Select","showSearch","style","width","placeholder","optionFilterProp","filterOption","input","option","label","includes","TerrainCostData","FE12TerrainCostDataEditor","_TerrainCostData$find","_useOutletContext","useOutletContext","buffer","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","id","get","DataView","error","direction","align","Alert","message","defaultValue","find","entry","toString","onSelect","options","DataType","BackTop","ToTopOutlined"],"sourceRoot":""}