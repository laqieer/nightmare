{"version":3,"file":"static/js/13487.1dd6a3aa.chunk.js","mappings":"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","sources":["components/Input/InputDec/index.jsx","components/Input/InputDropbox/index.jsx","components/Input/InputSelect/index.jsx","components/Module/FE6/Supportbonuseditor/options.js","components/Module/FE6/Supportbonuseditor/index.jsx"],"sourcesContent":["import { InputNumber, Space, Typography } from 'antd';\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { DataRange, read, write } from '../../util';\n\nconst { Text } = Typography;\n\nexport default function InputDec(props) {\n  const {\n    view, name, offset, type,\n  } = props;\n\n  const currentValue = view == null ? 0 : read(view, offset, type);\n  const [oldValue, setOldValue] = useState(currentValue);\n  if (oldValue !== currentValue) {\n    setOldValue(currentValue);\n  }\n\n  return (\n    <Space>\n      <Text\n        disabled={view == null}\n      >\n        {`${name}:${view == null ? '' : ` ${oldValue} →`}`}\n      </Text>\n      <InputNumber\n        disabled={view == null}\n        min={DataRange[type][0]}\n        max={DataRange[type][1]}\n        onPressEnter={(e) => {\n          const v = parseInt(e.target.value, 10);\n          write(view, offset, type, v);\n          setOldValue(v);\n        }}\n        {...props}\n      />\n    </Space>\n  );\n}\n\nInputDec.propTypes = {\n  view: PropTypes.instanceOf(DataView),\n  name: PropTypes.string.isRequired,\n  offset: PropTypes.number.isRequired,\n  type: PropTypes.number.isRequired,\n};\n\nInputDec.defaultProps = {\n  view: null,\n};\n","import { Select, Space, Typography } from 'antd';\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { read, write } from '../../util';\n\nconst { Text } = Typography;\n\nexport default function InputDropbox(props) {\n  const {\n    isHex, reference, view, name, offset, type, options, ...propsToPass\n  } = props;\n\n  const currentValue = view == null ? 0 : read(view, offset, type);\n  const [oldValue, setOldValue] = useState(currentValue);\n  if (oldValue !== currentValue) {\n    setOldValue(currentValue);\n  }\n  const oldOption = options.find((opt) => opt.value === oldValue);\n  const oldValueLabel = isHex ? `0x${oldValue.toString(16)}` : oldValue;\n  const oldLabel = oldOption === undefined ? oldValueLabel : oldOption.label;\n\n  return (\n    <Space>\n      <Text\n        disabled={view == null}\n      >\n        {`${name}:${view == null ? '' : ` ${oldLabel} →`}`}\n      </Text>\n      <Select\n        disabled={view == null}\n        showSearch\n        options={options}\n        placeholder=\"Search to Select\"\n        optionFilterProp=\"label\"\n        filterOption={(input, option) => option.label.includes(input)}\n        onSelect={(value) => {\n          write(view, offset, type, value);\n          setOldValue(value);\n        }}\n        {...propsToPass}\n      />\n      {reference === '' || view == null ? ''\n        : (\n          <Link\n            to={{\n              pathname: `../${reference}?id=${oldValue}`,\n              state: view.buffer,\n            }}\n          >\n            ➤\n          </Link>\n        )}\n    </Space>\n  );\n}\n\nInputDropbox.propTypes = {\n  view: PropTypes.instanceOf(DataView),\n  name: PropTypes.string.isRequired,\n  offset: PropTypes.number.isRequired,\n  type: PropTypes.number.isRequired,\n  options: PropTypes.arrayOf(PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    value: PropTypes.number.isRequired,\n  })).isRequired,\n  isHex: PropTypes.bool,\n  reference: PropTypes.string,\n};\n\nInputDropbox.defaultProps = {\n  view: null,\n  isHex: false,\n  reference: '',\n};\n","import { Select } from 'antd';\nimport React from 'react';\n\nexport default function InputSelect(props) {\n  return (\n    <Select\n      showSearch\n      style={{ width: '100%' }}\n      placeholder=\"Search to Select\"\n      optionFilterProp=\"label\"\n      filterOption={(input, option) => option.label.includes(input)}\n      {...props}\n    />\n  );\n}\n","export const FE6SupportbonuseditorEntries = [\n  { label: 'Entry 0', value: 0 },\n  { label: 'Entry 1', value: 1 },\n  { label: 'Entry 2', value: 2 },\n  { label: 'Entry 3', value: 3 },\n  { label: 'Entry 4', value: 4 },\n  { label: 'Entry 5', value: 5 },\n  { label: 'Entry 6', value: 6 },\n];\n\nexport const Affinity = [\n  { label: 'None', value: 0x00 },\n  { label: 'Fire', value: 0x01 },\n  { label: 'Thunder', value: 0x02 },\n  { label: 'Wind', value: 0x03 },\n  { label: 'Water', value: 0x04 },\n  { label: 'Dark', value: 0x05 },\n  { label: 'Light', value: 0x06 },\n  { label: 'Anima', value: 0x07 },\n];\n","import React from 'react';\nimport { useOutletContext, useSearchParams } from 'react-router-dom';\nimport { Space, Alert, BackTop } from 'antd';\nimport { ToTopOutlined } from '@ant-design/icons';\nimport {\n  FE6SupportbonuseditorEntries, Affinity,\n} from './options';\nimport { DataType } from '../../../util';\nimport InputSelect from '../../../Input/InputSelect';\nimport InputDropbox from '../../../Input/InputDropbox';\nimport InputDec from '../../../Input/InputDec';\n\nexport default function FE6Supportbonuseditor() {\n  const [buffer] = useOutletContext();\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const id = searchParams.get('id');\n  const address = 0x66350c;\n  const size = 8;\n  let view = null;\n\n  try {\n    view = new DataView(buffer, address + size * id, size);\n  } catch (error) {\n    view = null;\n  }\n\n  return (\n    <Space\n      direction=\"vertical\"\n      align=\"center\"\n      style={{ width: '100%' }}\n    >\n      <Alert\n        message=\"Support bonus editor by Nintenlord\"\n        type=\"info\"\n      />\n      <div key={id}>\n        <InputSelect\n          disabled={view == null}\n          defaultValue={FE6SupportbonuseditorEntries.find(\n            (entry) => entry.value.toString() === id,\n          ) ?? id}\n          onSelect={(value) => setSearchParams({ id: value })}\n          options={FE6SupportbonuseditorEntries}\n        />\n      </div>\n      <InputDropbox\n        isHex\n        type={DataType.U8}\n        options={Affinity}\n        view={view}\n        name=\"Affinity\"\n        offset={0}\n      />\n      <InputDec\n        type={DataType.U8}\n        view={view}\n        name=\"Attack bonus\"\n        offset={1}\n      />\n      <InputDec\n        type={DataType.U8}\n        view={view}\n        name=\"Defence bonus\"\n        offset={2}\n      />\n      <InputDec\n        type={DataType.U8}\n        view={view}\n        name=\"Accuracy bonus\"\n        offset={3}\n      />\n      <InputDec\n        type={DataType.U8}\n        view={view}\n        name=\"Avoid bonus\"\n        offset={4}\n      />\n      <InputDec\n        type={DataType.U8}\n        view={view}\n        name=\"Critical bonus\"\n        offset={5}\n      />\n      <InputDec\n        type={DataType.U8}\n        view={view}\n        name=\"Critical avoid bonus\"\n        offset={6}\n      />\n\n      <BackTop>\n        <ToTopOutlined />\n      </BackTop>\n    </Space>\n  );\n}\n"],"names":["Text","Typography","InputDec","props","view","name","offset","type","currentValue","read","_useState","useState","_useState2","_slicedToArray","oldValue","setOldValue","_jsxs","Space","children","_jsx","disabled","concat","InputNumber","_objectSpread","min","DataRange","max","onPressEnter","e","v","parseInt","target","value","write","defaultProps","InputDropbox","isHex","reference","options","propsToPass","_objectWithoutProperties","_excluded","oldOption","find","opt","oldValueLabel","toString","oldLabel","undefined","label","Select","showSearch","placeholder","optionFilterProp","filterOption","input","option","includes","onSelect","Link","to","pathname","state","buffer","InputSelect","style","width","FE6SupportbonuseditorEntries","Affinity","FE6Supportbonuseditor","_FE6Supportbonusedito","_useOutletContext","useOutletContext","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","id","get","DataView","error","direction","align","Alert","message","defaultValue","entry","DataType","BackTop","ToTopOutlined"],"sourceRoot":""}