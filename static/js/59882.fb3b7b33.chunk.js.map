{"version":3,"file":"static/js/59882.fb3b7b33.chunk.js","mappings":"yOAKQA,EAASC,EAAAA,EAAAA,KAEF,SAASC,EAASC,GAC/B,IACEC,EACED,EADFC,KAAMC,EACJF,EADIE,KAAMC,EACVH,EADUG,OAAQC,EAClBJ,EADkBI,KAGhBC,EAAuB,MAARJ,EAAe,GAAIK,EAAAA,EAAAA,IAAKL,EAAME,EAAQC,GAC3D,GAAgCG,EAAAA,EAAAA,UAASF,GAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KAKA,OAJID,IAAaH,GACfI,EAAYJ,IAIZ,UAAC,IAAD,YACE,SAACR,EAAD,CACEa,SAAkB,MAART,EADZ,mBAGMC,EAHN,YAGsB,MAARD,EAAe,GAAf,WAAwBO,EAAxB,eAEd,SAAC,KAAD,QACEE,SAAkB,MAART,EACVU,IAAKC,EAAAA,GAAUR,GAAM,GACrBS,IAAKD,EAAAA,GAAUR,GAAM,GACrBU,aAAc,SAACC,GACb,IAAMC,EAAIC,SAASF,EAAEG,OAAOC,MAAO,KACnCC,EAAAA,EAAAA,IAAMnB,EAAME,EAAQC,EAAMY,GAC1BP,EAAYO,EACb,GACGhB,MAIX,CASDD,EAASsB,aAAe,CACtBpB,KAAM,K,wOC1CAJ,EAASC,EAAAA,EAAAA,KAEF,SAASwB,EAAatB,GACnC,IACEuB,EACEvB,EADFuB,MAAOC,EACLxB,EADKwB,UAAWvB,EAChBD,EADgBC,KAAMC,EACtBF,EADsBE,KAAMC,EAC5BH,EAD4BG,OAAQC,EACpCJ,EADoCI,KAAMqB,EAC1CzB,EAD0CyB,QAAYC,GAD1D,OAEI1B,EAFJ,GAIMK,EAAuB,MAARJ,EAAe,GAAIK,EAAAA,EAAAA,IAAKL,EAAME,EAAQC,GAC3D,GAAgCG,EAAAA,EAAAA,UAASF,GAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KACID,IAAaH,GACfI,EAAYJ,GAEd,IAAMsB,EAAYF,EAAQG,MAAK,SAACC,GAAD,OAASA,EAAIV,QAAUX,CAAvB,IACzBsB,EAAgBP,EAAK,YAAQf,EAASuB,SAAS,KAAQvB,EACvDwB,OAAyBC,IAAdN,EAA0BG,EAAgBH,EAAUO,MAErE,OACE,UAAC,IAAD,YACE,SAACrC,EAAD,CACEa,SAAkB,MAART,EADZ,mBAGMC,EAHN,YAGsB,MAARD,EAAe,GAAf,WAAwB+B,EAAxB,eAEd,SAAC,KAAD,QACEtB,SAAkB,MAART,EACVkC,YAAU,EACVV,QAASA,EACTW,YAAY,mBACZC,iBAAiB,QACjBC,aAAc,SAACC,EAAOC,GAAR,OAAmBA,EAAON,MAAMO,SAASF,EAAzC,EACdG,SAAU,SAACvB,IACTC,EAAAA,EAAAA,IAAMnB,EAAME,EAAQC,EAAMe,GAC1BV,EAAYU,EACb,GACGO,IAES,KAAdF,GAA4B,MAARvB,EAAe,IAEhC,SAAC,KAAD,CACE0C,GAAI,CACFC,SAAS,MAAD,OAAQpB,EAAR,eAAwBhB,GAChCqC,MAAO5C,EAAK6C,QAHhB,sBAWT,CAeDxB,EAAaD,aAAe,CAC1BpB,KAAM,KACNsB,OAAO,EACPC,UAAW,G,sGCtEE,SAASuB,EAAY/C,GAClC,OACE,SAAC,KAAD,QACEmC,YAAU,EACVa,MAAO,CAAEC,MAAO,QAChBb,YAAY,mBACZC,iBAAiB,QACjBC,aAAc,SAACC,EAAOC,GAAR,OAAmBA,EAAON,MAAMO,SAASF,EAAzC,GACVvC,GAGT,C,iKCdYkD,EAA+B,CAC1C,CAAEhB,MAAO,UAAWf,MAAO,GAC3B,CAAEe,MAAO,UAAWf,MAAO,GAC3B,CAAEe,MAAO,UAAWf,MAAO,GAC3B,CAAEe,MAAO,UAAWf,MAAO,GAC3B,CAAEe,MAAO,UAAWf,MAAO,GAC3B,CAAEe,MAAO,UAAWf,MAAO,GAC3B,CAAEe,MAAO,UAAWf,MAAO,IAGhBgC,EAAW,CACtB,CAAEjB,MAAO,OAAQf,MAAO,GACxB,CAAEe,MAAO,OAAQf,MAAO,GACxB,CAAEe,MAAO,UAAWf,MAAO,GAC3B,CAAEe,MAAO,OAAQf,MAAO,GACxB,CAAEe,MAAO,QAASf,MAAO,GACzB,CAAEe,MAAO,OAAQf,MAAO,GACxB,CAAEe,MAAO,QAASf,MAAO,GACzB,CAAEe,MAAO,QAASf,MAAO,I,qDCNZ,SAASiC,IAAyB,IAAD,EAC9C,GAAiBC,EAAAA,EAAAA,MAAVP,GAAP,eACA,GAAwCQ,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAEMC,EAAKF,EAAaG,IAAI,MAGxBzD,EAAO,KAEX,IACEA,EAAO,IAAI0D,SAASb,EALN,QACH,EAIkCW,EAJlC,EAOZ,CAFC,MAAOG,GACP3D,EAAO,IACR,CAED,OACE,UAAC,IAAD,CACE4D,UAAU,WACVC,MAAM,SACNd,MAAO,CAAEC,MAAO,QAHlB,WAKE,SAAC,IAAD,CACEc,QAAQ,qCACR3D,KAAK,UAEP,0BACE,SAAC2C,EAAA,EAAD,CACErC,SAAkB,MAART,EACV+D,aAAY,UAAEd,EAA6BtB,MACzC,SAACqC,GAAD,OAAWA,EAAM9C,MAAMY,aAAe0B,CAAtC,WADU,QAEPA,EACLf,SAAU,SAACvB,GAAD,OAAWqC,EAAgB,CAAEC,GAAItC,GAAjC,EACVM,QAASyB,KAPHO,IAUV,SAACnC,EAAA,EAAD,CACEC,OAAK,EACLnB,KAAM8D,EAAAA,EAAAA,GACNzC,QAAS0B,EACTlD,KAAMA,EACNC,KAAK,WACLC,OAAQ,KAEV,SAACJ,EAAA,EAAD,CACEK,KAAM8D,EAAAA,EAAAA,GACNjE,KAAMA,EACNC,KAAK,eACLC,OAAQ,KAEV,SAACJ,EAAA,EAAD,CACEK,KAAM8D,EAAAA,EAAAA,GACNjE,KAAMA,EACNC,KAAK,gBACLC,OAAQ,KAEV,SAACJ,EAAA,EAAD,CACEK,KAAM8D,EAAAA,EAAAA,GACNjE,KAAMA,EACNC,KAAK,iBACLC,OAAQ,KAEV,SAACJ,EAAA,EAAD,CACEK,KAAM8D,EAAAA,EAAAA,GACNjE,KAAMA,EACNC,KAAK,cACLC,OAAQ,KAEV,SAACJ,EAAA,EAAD,CACEK,KAAM8D,EAAAA,EAAAA,GACNjE,KAAMA,EACNC,KAAK,iBACLC,OAAQ,KAEV,SAACJ,EAAA,EAAD,CACEK,KAAM8D,EAAAA,EAAAA,GACNjE,KAAMA,EACNC,KAAK,uBACLC,OAAQ,KAGV,SAAC,IAAD,WACE,SAACgE,EAAA,EAAD,QAIP,C","sources":["components/Input/InputDec/index.jsx","components/Input/InputDropbox/index.jsx","components/Input/InputSelect/index.jsx","components/Module/FE8/Supportbonuseditor/options.js","components/Module/FE8/Supportbonuseditor/index.jsx"],"sourcesContent":["import { InputNumber, Space, Typography } from 'antd';\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { DataRange, read, write } from '../../util';\n\nconst { Text } = Typography;\n\nexport default function InputDec(props) {\n  const {\n    view, name, offset, type,\n  } = props;\n\n  const currentValue = view == null ? 0 : read(view, offset, type);\n  const [oldValue, setOldValue] = useState(currentValue);\n  if (oldValue !== currentValue) {\n    setOldValue(currentValue);\n  }\n\n  return (\n    <Space>\n      <Text\n        disabled={view == null}\n      >\n        {`${name}:${view == null ? '' : ` ${oldValue} →`}`}\n      </Text>\n      <InputNumber\n        disabled={view == null}\n        min={DataRange[type][0]}\n        max={DataRange[type][1]}\n        onPressEnter={(e) => {\n          const v = parseInt(e.target.value, 10);\n          write(view, offset, type, v);\n          setOldValue(v);\n        }}\n        {...props}\n      />\n    </Space>\n  );\n}\n\nInputDec.propTypes = {\n  view: PropTypes.instanceOf(DataView),\n  name: PropTypes.string.isRequired,\n  offset: PropTypes.number.isRequired,\n  type: PropTypes.number.isRequired,\n};\n\nInputDec.defaultProps = {\n  view: null,\n};\n","import { Select, Space, Typography } from 'antd';\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { read, write } from '../../util';\n\nconst { Text } = Typography;\n\nexport default function InputDropbox(props) {\n  const {\n    isHex, reference, view, name, offset, type, options, ...propsToPass\n  } = props;\n\n  const currentValue = view == null ? 0 : read(view, offset, type);\n  const [oldValue, setOldValue] = useState(currentValue);\n  if (oldValue !== currentValue) {\n    setOldValue(currentValue);\n  }\n  const oldOption = options.find((opt) => opt.value === oldValue);\n  const oldValueLabel = isHex ? `0x${oldValue.toString(16)}` : oldValue;\n  const oldLabel = oldOption === undefined ? oldValueLabel : oldOption.label;\n\n  return (\n    <Space>\n      <Text\n        disabled={view == null}\n      >\n        {`${name}:${view == null ? '' : ` ${oldLabel} →`}`}\n      </Text>\n      <Select\n        disabled={view == null}\n        showSearch\n        options={options}\n        placeholder=\"Search to Select\"\n        optionFilterProp=\"label\"\n        filterOption={(input, option) => option.label.includes(input)}\n        onSelect={(value) => {\n          write(view, offset, type, value);\n          setOldValue(value);\n        }}\n        {...propsToPass}\n      />\n      {reference === '' || view == null ? ''\n        : (\n          <Link\n            to={{\n              pathname: `../${reference}?id=${oldValue}`,\n              state: view.buffer,\n            }}\n          >\n            ➤\n          </Link>\n        )}\n    </Space>\n  );\n}\n\nInputDropbox.propTypes = {\n  view: PropTypes.instanceOf(DataView),\n  name: PropTypes.string.isRequired,\n  offset: PropTypes.number.isRequired,\n  type: PropTypes.number.isRequired,\n  options: PropTypes.arrayOf(PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    value: PropTypes.number.isRequired,\n  })).isRequired,\n  isHex: PropTypes.bool,\n  reference: PropTypes.string,\n};\n\nInputDropbox.defaultProps = {\n  view: null,\n  isHex: false,\n  reference: '',\n};\n","import { Select } from 'antd';\nimport React from 'react';\n\nexport default function InputSelect(props) {\n  return (\n    <Select\n      showSearch\n      style={{ width: '100%' }}\n      placeholder=\"Search to Select\"\n      optionFilterProp=\"label\"\n      filterOption={(input, option) => option.label.includes(input)}\n      {...props}\n    />\n  );\n}\n","export const FE8SupportbonuseditorEntries = [\n  { label: 'Entry 0', value: 0 },\n  { label: 'Entry 1', value: 1 },\n  { label: 'Entry 2', value: 2 },\n  { label: 'Entry 3', value: 3 },\n  { label: 'Entry 4', value: 4 },\n  { label: 'Entry 5', value: 5 },\n  { label: 'Entry 6', value: 6 },\n];\n\nexport const Affinity = [\n  { label: 'None', value: 0x00 },\n  { label: 'Fire', value: 0x01 },\n  { label: 'Thunder', value: 0x02 },\n  { label: 'Wind', value: 0x03 },\n  { label: 'Water', value: 0x04 },\n  { label: 'Dark', value: 0x05 },\n  { label: 'Light', value: 0x06 },\n  { label: 'Anima', value: 0x07 },\n];\n","import React from 'react';\nimport { useOutletContext, useSearchParams } from 'react-router-dom';\nimport { Space, Alert, BackTop } from 'antd';\nimport { ToTopOutlined } from '@ant-design/icons';\nimport {\n  FE8SupportbonuseditorEntries, Affinity,\n} from './options';\nimport { DataType } from '../../../util';\nimport InputSelect from '../../../Input/InputSelect';\nimport InputDropbox from '../../../Input/InputDropbox';\nimport InputDec from '../../../Input/InputDec';\n\nexport default function FE8Supportbonuseditor() {\n  const [buffer] = useOutletContext();\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const id = searchParams.get('id');\n  const address = 0x8B05F8;\n  const size = 8;\n  let view = null;\n\n  try {\n    view = new DataView(buffer, address + size * id, size);\n  } catch (error) {\n    view = null;\n  }\n\n  return (\n    <Space\n      direction=\"vertical\"\n      align=\"center\"\n      style={{ width: '100%' }}\n    >\n      <Alert\n        message=\"Support bonus editor by Nintenlord\"\n        type=\"info\"\n      />\n      <div key={id}>\n        <InputSelect\n          disabled={view == null}\n          defaultValue={FE8SupportbonuseditorEntries.find(\n            (entry) => entry.value.toString() === id,\n          ) ?? id}\n          onSelect={(value) => setSearchParams({ id: value })}\n          options={FE8SupportbonuseditorEntries}\n        />\n      </div>\n      <InputDropbox\n        isHex\n        type={DataType.U8}\n        options={Affinity}\n        view={view}\n        name=\"Affinity\"\n        offset={0}\n      />\n      <InputDec\n        type={DataType.U8}\n        view={view}\n        name=\"Attack bonus\"\n        offset={1}\n      />\n      <InputDec\n        type={DataType.U8}\n        view={view}\n        name=\"Defence bonus\"\n        offset={2}\n      />\n      <InputDec\n        type={DataType.U8}\n        view={view}\n        name=\"Accuracy bonus\"\n        offset={3}\n      />\n      <InputDec\n        type={DataType.U8}\n        view={view}\n        name=\"Avoid bonus\"\n        offset={4}\n      />\n      <InputDec\n        type={DataType.U8}\n        view={view}\n        name=\"Critical bonus\"\n        offset={5}\n      />\n      <InputDec\n        type={DataType.U8}\n        view={view}\n        name=\"Critical avoid bonus\"\n        offset={6}\n      />\n\n      <BackTop>\n        <ToTopOutlined />\n      </BackTop>\n    </Space>\n  );\n}\n"],"names":["Text","Typography","InputDec","props","view","name","offset","type","currentValue","read","useState","oldValue","setOldValue","disabled","min","DataRange","max","onPressEnter","e","v","parseInt","target","value","write","defaultProps","InputDropbox","isHex","reference","options","propsToPass","oldOption","find","opt","oldValueLabel","toString","oldLabel","undefined","label","showSearch","placeholder","optionFilterProp","filterOption","input","option","includes","onSelect","to","pathname","state","buffer","InputSelect","style","width","FE8SupportbonuseditorEntries","Affinity","FE8Supportbonuseditor","useOutletContext","useSearchParams","searchParams","setSearchParams","id","get","DataView","error","direction","align","message","defaultValue","entry","DataType","ToTopOutlined"],"sourceRoot":""}