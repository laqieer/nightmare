{"version":3,"file":"static/js/42387.aaf5c68f.chunk.js","mappings":"yMAKA,MAAM,KAAEA,GAASC,EAAAA,EAEF,SAASC,EAASC,GAC/B,MAAM,KACJC,EAAI,KAAEC,EAAI,OAAEC,EAAM,KAAEC,GAClBJ,EAEEK,EAAuB,MAARJ,EAAe,GAAIK,EAAAA,EAAAA,IAAKL,EAAME,EAAQC,IACpDG,EAAUC,IAAeC,EAAAA,EAAAA,UAASJ,GAKzC,OAJIE,IAAaF,GACfG,EAAYH,IAIZK,EAAAA,EAAAA,MAACC,EAAAA,EAAK,CAAAC,SAAA,EACJC,EAAAA,EAAAA,KAAChB,EAAI,CACHiB,SAAkB,MAARb,EAAaW,SAAA,GAAAG,OAEnBb,EAAI,KAAAa,OAAY,MAARd,EAAe,GAAE,IAAAc,OAAOR,EAAQ,eAE9CM,EAAAA,EAAAA,KAACG,EAAAA,GAAWC,EAAAA,EAAAA,GAAA,CACVH,SAAkB,MAARb,EACViB,IAAKC,EAAAA,GAAUf,GAAM,GACrBgB,IAAKD,EAAAA,GAAUf,GAAM,GACrBiB,aAAeC,IACb,MAAMC,EAAIC,SAASF,EAAEG,OAAOC,MAAO,KACnCC,EAAAA,EAAAA,IAAM1B,EAAME,EAAQC,EAAMmB,GAC1Bf,EAAYe,EAAE,GAEZvB,MAIZ,CASAD,EAAS6B,aAAe,CACtB3B,KAAM,K,mFC7CO,SAAS4B,EAAY7B,GAClC,OACEa,EAAAA,EAAAA,KAACiB,EAAAA,GAAMb,EAAAA,EAAAA,GAAA,CACLc,YAAU,EACVC,MAAO,CAAEC,MAAO,QAChBC,YAAY,mBACZC,iBAAiB,QACjBC,aAAcA,CAACC,EAAOC,IAAWA,EAAOC,MAAMC,SAASH,IACnDrC,GAGV,C,+HCdO,MAAMyC,EAAoB,CAC/B,CAAEF,MAAO,6BAA8Bb,MAAO,GAC9C,CAAEa,MAAO,6BAA8Bb,MAAO,GAC9C,CAAEa,MAAO,6BAA8Bb,MAAO,GAC9C,CAAEa,MAAO,6BAA8Bb,MAAO,GAC9C,CAAEa,MAAO,6BAA8Bb,MAAO,GAC9C,CAAEa,MAAO,6BAA8Bb,MAAO,GAC9C,CAAEa,MAAO,6BAA8Bb,MAAO,GAC9C,CAAEa,MAAO,6BAA8Bb,MAAO,GAC9C,CAAEa,MAAO,6BAA8Bb,MAAO,GAC9C,CAAEa,MAAO,6BAA8Bb,MAAO,GAC9C,CAAEa,MAAO,6BAA8Bb,MAAO,IAC9C,CAAEa,MAAO,6BAA8Bb,MAAO,IAC9C,CAAEa,MAAO,6BAA8Bb,MAAO,IAC9C,CAAEa,MAAO,6BAA8Bb,MAAO,IAC9C,CAAEa,MAAO,6BAA8Bb,MAAO,IAC9C,CAAEa,MAAO,6BAA8Bb,MAAO,IAC9C,CAAEa,MAAO,6BAA8Bb,MAAO,IAC9C,CAAEa,MAAO,6BAA8Bb,MAAO,IAC9C,CAAEa,MAAO,6BAA8Bb,MAAO,IAC9C,CAAEa,MAAO,6BAA8Bb,MAAO,IAC9C,CAAEa,MAAO,6BAA8Bb,MAAO,IAC9C,CAAEa,MAAO,6BAA8Bb,MAAO,IAC9C,CAAEa,MAAO,6BAA8Bb,MAAO,IAC9C,CAAEa,MAAO,6BAA8Bb,MAAO,IAC9C,CAAEa,MAAO,6BAA8Bb,MAAO,IAC9C,CAAEa,MAAO,6BAA8Bb,MAAO,IAC9C,CAAEa,MAAO,6BAA8Bb,MAAO,IAC9C,CAAEa,MAAO,6BAA8Bb,MAAO,IAC9C,CAAEa,MAAO,6BAA8Bb,MAAO,IAC9C,CAAEa,MAAO,6BAA8Bb,MAAO,IAC9C,CAAEa,MAAO,6BAA8Bb,MAAO,IAC9C,CAAEa,MAAO,6BAA8Bb,MAAO,IAC9C,CAAEa,MAAO,6BAA8Bb,MAAO,IAC9C,CAAEa,MAAO,6BAA8Bb,MAAO,IAC9C,CAAEa,MAAO,6BAA8Bb,MAAO,IAC9C,CAAEa,MAAO,6BAA8Bb,MAAO,IAC9C,CAAEa,MAAO,6BAA8Bb,MAAO,IAC9C,CAAEa,MAAO,6BAA8Bb,MAAO,IAC9C,CAAEa,MAAO,6BAA8Bb,MAAO,IAC9C,CAAEa,MAAO,6BAA8Bb,MAAO,IAC9C,CAAEa,MAAO,6BAA8Bb,MAAO,IAC9C,CAAEa,MAAO,6BAA8Bb,MAAO,IAC9C,CAAEa,MAAO,6BAA8Bb,MAAO,IAC9C,CAAEa,MAAO,6BAA8Bb,MAAO,IAC9C,CAAEa,MAAO,6BAA8Bb,MAAO,IAC9C,CAAEa,MAAO,6BAA8Bb,MAAO,IAC9C,CAAEa,MAAO,6BAA8Bb,MAAO,IAC9C,CAAEa,MAAO,6BAA8Bb,MAAO,IAC9C,CAAEa,MAAO,6BAA8Bb,MAAO,IAC9C,CAAEa,MAAO,6BAA8Bb,MAAO,IAC9C,CAAEa,MAAO,6BAA8Bb,MAAO,IAC9C,CAAEa,MAAO,6BAA8Bb,MAAO,IAC9C,CAAEa,MAAO,6BAA8Bb,MAAO,IAC9C,CAAEa,MAAO,6BAA8Bb,MAAO,IAC9C,CAAEa,MAAO,6BAA8Bb,MAAO,IAC9C,CAAEa,MAAO,6BAA8Bb,MAAO,IAC9C,CAAEa,MAAO,6BAA8Bb,MAAO,IAC9C,CAAEa,MAAO,6BAA8Bb,MAAO,IAC9C,CAAEa,MAAO,6BAA8Bb,MAAO,IAC9C,CAAEa,MAAO,6BAA8Bb,MAAO,IAC9C,CAAEa,MAAO,6BAA8Bb,MAAO,IAC9C,CAAEa,MAAO,6BAA8Bb,MAAO,IAC9C,CAAEa,MAAO,6BAA8Bb,MAAO,IAC9C,CAAEa,MAAO,6BAA8Bb,MAAO,IAC9C,CAAEa,MAAO,6BAA8Bb,MAAO,IAC9C,CAAEa,MAAO,6BAA8Bb,MAAO,IAC9C,CAAEa,MAAO,6BAA8Bb,MAAO,IAC9C,CAAEa,MAAO,6BAA8Bb,MAAO,IAC9C,CAAEa,MAAO,6BAA8Bb,MAAO,IAC9C,CAAEa,MAAO,6BAA8Bb,MAAO,IAC9C,CAAEa,MAAO,6BAA8Bb,MAAO,IAC9C,CAAEa,MAAO,6BAA8Bb,MAAO,IAC9C,CAAEa,MAAO,6BAA8Bb,MAAO,IAC9C,CAAEa,MAAO,6BAA8Bb,MAAO,IAC9C,CAAEa,MAAO,6BAA8Bb,MAAO,IAC9C,CAAEa,MAAO,6BAA8Bb,MAAO,IAC9C,CAAEa,MAAO,6BAA8Bb,MAAO,IAC9C,CAAEa,MAAO,6BAA8Bb,MAAO,IAC9C,CAAEa,MAAO,6BAA8Bb,MAAO,IAC9C,CAAEa,MAAO,6BAA8Bb,MAAO,IAC9C,CAAEa,MAAO,6BAA8Bb,MAAO,IAC9C,CAAEa,MAAO,6BAA8Bb,MAAO,IAC9C,CAAEa,MAAO,6BAA8Bb,MAAO,IAC9C,CAAEa,MAAO,6BAA8Bb,MAAO,IAC9C,CAAEa,MAAO,6BAA8Bb,MAAO,IAC9C,CAAEa,MAAO,6BAA8Bb,MAAO,IAC9C,CAAEa,MAAO,6BAA8Bb,MAAO,IAC9C,CAAEa,MAAO,6BAA8Bb,MAAO,IAC9C,CAAEa,MAAO,6BAA8Bb,MAAO,IAC9C,CAAEa,MAAO,6BAA8Bb,MAAO,IAC9C,CAAEa,MAAO,6BAA8Bb,MAAO,IAC9C,CAAEa,MAAO,6BAA8Bb,MAAO,IAC9C,CAAEa,MAAO,6BAA8Bb,MAAO,IAC9C,CAAEa,MAAO,6BAA8Bb,MAAO,IAC9C,CAAEa,MAAO,6BAA8Bb,MAAO,IAC9C,CAAEa,MAAO,6BAA8Bb,MAAO,IAC9C,CAAEa,MAAO,6BAA8Bb,MAAO,IAC9C,CAAEa,MAAO,6BAA8Bb,MAAO,IAC9C,CAAEa,MAAO,6BAA8Bb,MAAO,IAC9C,CAAEa,MAAO,6BAA8Bb,MAAO,IAC9C,CAAEa,MAAO,6BAA8Bb,MAAO,KAC9C,CAAEa,MAAO,6BAA8Bb,MAAO,KAC9C,CAAEa,MAAO,6BAA8Bb,MAAO,KAC9C,CAAEa,MAAO,6BAA8Bb,MAAO,KAC9C,CAAEa,MAAO,6BAA8Bb,MAAO,KAC9C,CAAEa,MAAO,6BAA8Bb,MAAO,KAC9C,CAAEa,MAAO,6BAA8Bb,MAAO,KAC9C,CAAEa,MAAO,6BAA8Bb,MAAO,KAC9C,CAAEa,MAAO,6BAA8Bb,MAAO,KAC9C,CAAEa,MAAO,6BAA8Bb,MAAO,KAC9C,CAAEa,MAAO,6BAA8Bb,MAAO,KAC9C,CAAEa,MAAO,6BAA8Bb,MAAO,KAC9C,CAAEa,MAAO,6BAA8Bb,MAAO,KAC9C,CAAEa,MAAO,6BAA8Bb,MAAO,KAC9C,CAAEa,MAAO,6BAA8Bb,MAAO,KAC9C,CAAEa,MAAO,6BAA8Bb,MAAO,KAC9C,CAAEa,MAAO,6BAA8Bb,MAAO,KAC9C,CAAEa,MAAO,6BAA8Bb,MAAO,KAC9C,CAAEa,MAAO,6BAA8Bb,MAAO,KAC9C,CAAEa,MAAO,6BAA8Bb,MAAO,KAC9C,CAAEa,MAAO,6BAA8Bb,MAAO,KAC9C,CAAEa,MAAO,6BAA8Bb,MAAO,KAC9C,CAAEa,MAAO,6BAA8Bb,MAAO,KAC9C,CAAEa,MAAO,6BAA8Bb,MAAO,KAC9C,CAAEa,MAAO,6BAA8Bb,MAAO,KAC9C,CAAEa,MAAO,6BAA8Bb,MAAO,KAC9C,CAAEa,MAAO,6BAA8Bb,MAAO,KAC9C,CAAEa,MAAO,6BAA8Bb,MAAO,KAC9C,CAAEa,MAAO,6BAA8Bb,MAAO,KAC9C,CAAEa,MAAO,6BAA8Bb,MAAO,KAC9C,CAAEa,MAAO,6BAA8Bb,MAAO,KAC9C,CAAEa,MAAO,6BAA8Bb,MAAO,KAC9C,CAAEa,MAAO,6BAA8Bb,MAAO,KAC9C,CAAEa,MAAO,6BAA8Bb,MAAO,KAC9C,CAAEa,MAAO,6BAA8Bb,MAAO,KAC9C,CAAEa,MAAO,6BAA8Bb,MAAO,M,gDC7HjC,SAASgB,IAAwB,IAADC,EAC7C,MAAOC,IAAUC,EAAAA,EAAAA,OACVC,EAAcC,IAAmBC,EAAAA,EAAAA,MAElCC,EAAKH,EAAaI,IAAI,MAG5B,IAAIjD,EAAO,KAEX,IACEA,EAAO,IAAIkD,SAASP,EALN,SACH,EAIkCK,EAJlC,EAKb,CAAE,MAAOG,GACPnD,EAAO,IACT,CAEA,OACES,EAAAA,EAAAA,MAACC,EAAAA,EAAK,CACJ0C,UAAU,WACVC,MAAM,SACNtB,MAAO,CAAEC,MAAO,QAASrB,SAAA,EAEzBC,EAAAA,EAAAA,KAAC0C,EAAAA,EAAK,CACJC,QAAQ,uEACRpD,KAAK,UAEPS,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAACgB,EAAAA,EAAW,CACVf,SAAkB,MAARb,EACVwD,aAEC,QAFWd,EAAEF,EAAkBiB,MAC7BC,GAAUA,EAAMjC,MAAMkC,aAAeX,WACvC,IAAAN,EAAAA,EAAIM,EACLY,SAAWnC,GAAUqB,EAAgB,CAAEE,GAAIvB,IAC3CoC,QAASrB,KAPHQ,IAUVpC,EAAAA,EAAAA,KAACd,EAAAA,EAAQ,CACPK,KAAM2D,EAAAA,GAASC,GACf/D,KAAMA,EACNC,KAAK,WACLC,OAAQ,KAEVU,EAAAA,EAAAA,KAACd,EAAAA,EAAQ,CACPK,KAAM2D,EAAAA,GAASC,GACf/D,KAAMA,EACNC,KAAK,gBACLC,OAAQ,KAEVU,EAAAA,EAAAA,KAACd,EAAAA,EAAQ,CACPK,KAAM2D,EAAAA,GAASC,GACf/D,KAAMA,EACNC,KAAK,YACLC,OAAQ,KAEVU,EAAAA,EAAAA,KAACd,EAAAA,EAAQ,CACPK,KAAM2D,EAAAA,GAASC,GACf/D,KAAMA,EACNC,KAAK,YACLC,OAAQ,KAEVU,EAAAA,EAAAA,KAACd,EAAAA,EAAQ,CACPK,KAAM2D,EAAAA,GAASC,GACf/D,KAAMA,EACNC,KAAK,YACLC,OAAQ,KAEVU,EAAAA,EAAAA,KAACd,EAAAA,EAAQ,CACPK,KAAM2D,EAAAA,GAASC,GACf/D,KAAMA,EACNC,KAAK,YACLC,OAAQ,KAEVU,EAAAA,EAAAA,KAACd,EAAAA,EAAQ,CACPK,KAAM2D,EAAAA,GAASC,GACf/D,KAAMA,EACNC,KAAK,YACLC,OAAQ,KAGVU,EAAAA,EAAAA,KAACoD,EAAAA,EAAO,CAAArD,UACNC,EAAAA,EAAAA,KAACqD,EAAAA,EAAa,QAItB,C","sources":["components/Input/InputDec/index.jsx","components/Input/InputSelect/index.jsx","components/Module/FE7/StatBonusesEditor/options.js","components/Module/FE7/StatBonusesEditor/index.jsx"],"sourcesContent":["import { InputNumber, Space, Typography } from 'antd';\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { DataRange, read, write } from '../../util';\n\nconst { Text } = Typography;\n\nexport default function InputDec(props) {\n  const {\n    view, name, offset, type,\n  } = props;\n\n  const currentValue = view == null ? 0 : read(view, offset, type);\n  const [oldValue, setOldValue] = useState(currentValue);\n  if (oldValue !== currentValue) {\n    setOldValue(currentValue);\n  }\n\n  return (\n    <Space>\n      <Text\n        disabled={view == null}\n      >\n        {`${name}:${view == null ? '' : ` ${oldValue} â†’`}`}\n      </Text>\n      <InputNumber\n        disabled={view == null}\n        min={DataRange[type][0]}\n        max={DataRange[type][1]}\n        onPressEnter={(e) => {\n          const v = parseInt(e.target.value, 10);\n          write(view, offset, type, v);\n          setOldValue(v);\n        }}\n        {...props}\n      />\n    </Space>\n  );\n}\n\nInputDec.propTypes = {\n  view: PropTypes.instanceOf(DataView),\n  name: PropTypes.string.isRequired,\n  offset: PropTypes.number.isRequired,\n  type: PropTypes.number.isRequired,\n};\n\nInputDec.defaultProps = {\n  view: null,\n};\n","import { Select } from 'antd';\nimport React from 'react';\n\nexport default function InputSelect(props) {\n  return (\n    <Select\n      showSearch\n      style={{ width: '100%' }}\n      placeholder=\"Search to Select\"\n      optionFilterProp=\"label\"\n      filterOption={(input, option) => option.label.includes(input)}\n      {...props}\n    />\n  );\n}\n","export const StatBonusPointers = [\n  { label: 'FFF2A0 Pointer - 0x8FFF2A0', value: 0 },\n  { label: 'FFF2A8 Pointer - 0x8FFF2A8', value: 1 },\n  { label: 'FFF2B0 Pointer - 0x8FFF2B0', value: 2 },\n  { label: 'FFF2B8 Pointer - 0x8FFF2B8', value: 3 },\n  { label: 'FFF2C0 Pointer - 0x8FFF2C0', value: 4 },\n  { label: 'FFF2C8 Pointer - 0x8FFF2C8', value: 5 },\n  { label: 'FFF2D0 Pointer - 0x8FFF2D0', value: 6 },\n  { label: 'FFF2D8 Pointer - 0x8FFF2D8', value: 7 },\n  { label: 'FFF2E0 Pointer - 0x8FFF2E0', value: 8 },\n  { label: 'FFF2E8 Pointer - 0x8FFF2E8', value: 9 },\n  { label: 'FFF2F0 Pointer - 0x8FFF2F0', value: 10 },\n  { label: 'FFF2F8 Pointer - 0x8FFF2F8', value: 11 },\n  { label: 'FFF300 Pointer - 0x8FFF300', value: 12 },\n  { label: 'FFF308 Pointer - 0x8FFF308', value: 13 },\n  { label: 'FFF310 Pointer - 0x8FFF310', value: 14 },\n  { label: 'FFF318 Pointer - 0x8FFF318', value: 15 },\n  { label: 'FFF320 Pointer - 0x8FFF320', value: 16 },\n  { label: 'FFF328 Pointer - 0x8FFF328', value: 17 },\n  { label: 'FFF330 Pointer - 0x8FFF330', value: 18 },\n  { label: 'FFF338 Pointer - 0x8FFF338', value: 19 },\n  { label: 'FFF340 Pointer - 0x8FFF340', value: 20 },\n  { label: 'FFF348 Pointer - 0x8FFF348', value: 21 },\n  { label: 'FFF350 Pointer - 0x8FFF350', value: 22 },\n  { label: 'FFF358 Pointer - 0x8FFF358', value: 23 },\n  { label: 'FFF360 Pointer - 0x8FFF360', value: 24 },\n  { label: 'FFF368 Pointer - 0x8FFF368', value: 25 },\n  { label: 'FFF370 Pointer - 0x8FFF370', value: 26 },\n  { label: 'FFF378 Pointer - 0x8FFF378', value: 27 },\n  { label: 'FFF380 Pointer - 0x8FFF380', value: 28 },\n  { label: 'FFF388 Pointer - 0x8FFF388', value: 29 },\n  { label: 'FFF390 Pointer - 0x8FFF390', value: 30 },\n  { label: 'FFF398 Pointer - 0x8FFF398', value: 31 },\n  { label: 'FFF3A0 Pointer - 0x8FFF3A0', value: 32 },\n  { label: 'FFF3A8 Pointer - 0x8FFF3A8', value: 33 },\n  { label: 'FFF3B0 Pointer - 0x8FFF3B0', value: 34 },\n  { label: 'FFF3B8 Pointer - 0x8FFF3B8', value: 35 },\n  { label: 'FFF3C0 Pointer - 0x8FFF3C0', value: 36 },\n  { label: 'FFF3C8 Pointer - 0x8FFF3C8', value: 37 },\n  { label: 'FFF3D0 Pointer - 0x8FFF3D0', value: 38 },\n  { label: 'FFF3D8 Pointer - 0x8FFF3D8', value: 39 },\n  { label: 'FFF3E0 Pointer - 0x8FFF3E0', value: 40 },\n  { label: 'FFF3E8 Pointer - 0x8FFF3E8', value: 41 },\n  { label: 'FFF3F0 Pointer - 0x8FFF3F0', value: 42 },\n  { label: 'FFF3F8 Pointer - 0x8FFF3F8', value: 43 },\n  { label: 'FFF400 Pointer - 0x8FFF400', value: 44 },\n  { label: 'FFF408 Pointer - 0x8FFF408', value: 45 },\n  { label: 'FFF410 Pointer - 0x8FFF410', value: 46 },\n  { label: 'FFF418 Pointer - 0x8FFF418', value: 47 },\n  { label: 'FFF420 Pointer - 0x8FFF420', value: 48 },\n  { label: 'FFF428 Pointer - 0x8FFF428', value: 49 },\n  { label: 'FFF430 Pointer - 0x8FFF430', value: 50 },\n  { label: 'FFF438 Pointer - 0x8FFF438', value: 51 },\n  { label: 'FFF440 Pointer - 0x8FFF440', value: 52 },\n  { label: 'FFF448 Pointer - 0x8FFF448', value: 53 },\n  { label: 'FFF450 Pointer - 0x8FFF450', value: 54 },\n  { label: 'FFF458 Pointer - 0x8FFF458', value: 55 },\n  { label: 'FFF460 Pointer - 0x8FFF460', value: 56 },\n  { label: 'FFF468 Pointer - 0x8FFF468', value: 57 },\n  { label: 'FFF470 Pointer - 0x8FFF470', value: 58 },\n  { label: 'FFF478 Pointer - 0x8FFF478', value: 59 },\n  { label: 'FFF480 Pointer - 0x8FFF480', value: 60 },\n  { label: 'FFF488 Pointer - 0x8FFF488', value: 61 },\n  { label: 'FFF490 Pointer - 0x8FFF490', value: 62 },\n  { label: 'FFF498 Pointer - 0x8FFF498', value: 63 },\n  { label: 'FFF4A0 Pointer - 0x8FFF4A0', value: 64 },\n  { label: 'FFF4A8 Pointer - 0x8FFF4A8', value: 65 },\n  { label: 'FFF4B0 Pointer - 0x8FFF4B0', value: 66 },\n  { label: 'FFF4B8 Pointer - 0x8FFF4B8', value: 67 },\n  { label: 'FFF4C0 Pointer - 0x8FFF4C0', value: 68 },\n  { label: 'FFF4C8 Pointer - 0x8FFF4C8', value: 69 },\n  { label: 'FFF4D0 Pointer - 0x8FFF4D0', value: 70 },\n  { label: 'FFF4D8 Pointer - 0x8FFF4D8', value: 71 },\n  { label: 'FFF4E0 Pointer - 0x8FFF4E0', value: 72 },\n  { label: 'FFF4E8 Pointer - 0x8FFF4E8', value: 73 },\n  { label: 'FFF4F0 Pointer - 0x8FFF4F0', value: 74 },\n  { label: 'FFF4F8 Pointer - 0x8FFF4F8', value: 75 },\n  { label: 'FFF500 Pointer - 0x8FFF500', value: 76 },\n  { label: 'FFF508 Pointer - 0x8FFF508', value: 77 },\n  { label: 'FFF510 Pointer - 0x8FFF510', value: 78 },\n  { label: 'FFF518 Pointer - 0x8FFF518', value: 79 },\n  { label: 'FFF520 Pointer - 0x8FFF520', value: 80 },\n  { label: 'FFF528 Pointer - 0x8FFF528', value: 81 },\n  { label: 'FFF530 Pointer - 0x8FFF530', value: 82 },\n  { label: 'FFF538 Pointer - 0x8FFF538', value: 83 },\n  { label: 'FFF540 Pointer - 0x8FFF540', value: 84 },\n  { label: 'FFF548 Pointer - 0x8FFF548', value: 85 },\n  { label: 'FFF550 Pointer - 0x8FFF550', value: 86 },\n  { label: 'FFF558 Pointer - 0x8FFF558', value: 87 },\n  { label: 'FFF560 Pointer - 0x8FFF560', value: 88 },\n  { label: 'FFF568 Pointer - 0x8FFF568', value: 89 },\n  { label: 'FFF570 Pointer - 0x8FFF570', value: 90 },\n  { label: 'FFF578 Pointer - 0x8FFF578', value: 91 },\n  { label: 'FFF580 Pointer - 0x8FFF580', value: 92 },\n  { label: 'FFF588 Pointer - 0x8FFF588', value: 93 },\n  { label: 'FFF590 Pointer - 0x8FFF590', value: 94 },\n  { label: 'FFF598 Pointer - 0x8FFF598', value: 95 },\n  { label: 'FFF5A0 Pointer - 0x8FFF5A0', value: 96 },\n  { label: 'FFF5A8 Pointer - 0x8FFF5A8', value: 97 },\n  { label: 'FFF5B0 Pointer - 0x8FFF5B0', value: 98 },\n  { label: 'FFF5B8 Pointer - 0x8FFF5B8', value: 99 },\n  { label: 'FFF5C0 Pointer - 0x8FFF5C0', value: 100 },\n  { label: 'FFF5C8 Pointer - 0x8FFF5C8', value: 101 },\n  { label: 'FFF5D0 Pointer - 0x8FFF5D0', value: 102 },\n  { label: 'FFF5D8 Pointer - 0x8FFF5D8', value: 103 },\n  { label: 'FFF5E0 Pointer - 0x8FFF5E0', value: 104 },\n  { label: 'FFF5E8 Pointer - 0x8FFF5E8', value: 105 },\n  { label: 'FFF5F0 Pointer - 0x8FFF5F0', value: 106 },\n  { label: 'FFF5F8 Pointer - 0x8FFF5F8', value: 107 },\n  { label: 'FFF600 Pointer - 0x8FFF600', value: 108 },\n  { label: 'FFF608 Pointer - 0x8FFF608', value: 109 },\n  { label: 'FFF610 Pointer - 0x8FFF610', value: 110 },\n  { label: 'FFF618 Pointer - 0x8FFF618', value: 111 },\n  { label: 'FFF620 Pointer - 0x8FFF620', value: 112 },\n  { label: 'FFF628 Pointer - 0x8FFF628', value: 113 },\n  { label: 'FFF630 Pointer - 0x8FFF630', value: 114 },\n  { label: 'FFF638 Pointer - 0x8FFF638', value: 115 },\n  { label: 'FFF640 Pointer - 0x8FFF640', value: 116 },\n  { label: 'FFF648 Pointer - 0x8FFF648', value: 117 },\n  { label: 'FFF650 Pointer - 0x8FFF650', value: 118 },\n  { label: 'FFF658 Pointer - 0x8FFF658', value: 119 },\n  { label: 'FFF660 Pointer - 0x8FFF660', value: 120 },\n  { label: 'FFF668 Pointer - 0x8FFF668', value: 121 },\n  { label: 'FFF670 Pointer - 0x8FFF670', value: 122 },\n  { label: 'FFF678 Pointer - 0x8FFF678', value: 123 },\n  { label: 'FFF680 Pointer - 0x8FFF680', value: 124 },\n  { label: 'FFF688 Pointer - 0x8FFF688', value: 125 },\n  { label: 'FFF690 Pointer - 0x8FFF690', value: 126 },\n  { label: 'FFF698 Pointer - 0x8FFF698', value: 127 },\n  { label: 'FFF6A0 Pointer - 0x8FFF6A0', value: 128 },\n  { label: 'FFF6A8 Pointer - 0x8FFF6A8', value: 129 },\n  { label: 'FFF6B0 Pointer - 0x8FFF6B0', value: 130 },\n  { label: 'FFF6B8 Pointer - 0x8FFF6B8', value: 131 },\n  { label: 'FFF6C0 Pointer - 0x8FFF6C0', value: 132 },\n  { label: 'FFF6C8 Pointer - 0x8FFF6C8', value: 133 },\n  { label: 'FFF6D0 Pointer - 0x8FFF6D0', value: 134 },\n  { label: 'FFF6D8 Pointer - 0x8FFF6D8', value: 135 },\n];\n\nexport default StatBonusPointers;\n","import React from 'react';\nimport { useOutletContext, useSearchParams } from 'react-router-dom';\nimport { Space, Alert, BackTop } from 'antd';\nimport { ToTopOutlined } from '@ant-design/icons';\nimport {\n  StatBonusPointers,\n} from './options';\nimport { DataType } from '../../../util';\nimport InputSelect from '../../../Input/InputSelect';\nimport InputDec from '../../../Input/InputDec';\n\nexport default function FE7StatBonusesEditor() {\n  const [buffer] = useOutletContext();\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const id = searchParams.get('id');\n  const address = 0xFFF2A0;\n  const size = 8;\n  let view = null;\n\n  try {\n    view = new DataView(buffer, address + size * id, size);\n  } catch (error) {\n    view = null;\n  }\n\n  return (\n    <Space\n      direction=\"vertical\"\n      align=\"center\"\n      style={{ width: '100%' }}\n    >\n      <Alert\n        message=\"FE7 Stat Bonuses Editor by SpyroDi (please consult Stat Bonuses.txt)\"\n        type=\"info\"\n      />\n      <div key={id}>\n        <InputSelect\n          disabled={view == null}\n          defaultValue={StatBonusPointers.find(\n            (entry) => entry.value.toString() === id,\n          ) ?? id}\n          onSelect={(value) => setSearchParams({ id: value })}\n          options={StatBonusPointers}\n        />\n      </div>\n      <InputDec\n        type={DataType.S8}\n        view={view}\n        name=\"HP Bonus\"\n        offset={0}\n      />\n      <InputDec\n        type={DataType.S8}\n        view={view}\n        name=\"STR/MGC Bonus\"\n        offset={1}\n      />\n      <InputDec\n        type={DataType.S8}\n        view={view}\n        name=\"SKL Bonus\"\n        offset={2}\n      />\n      <InputDec\n        type={DataType.S8}\n        view={view}\n        name=\"SPD Bonus\"\n        offset={3}\n      />\n      <InputDec\n        type={DataType.S8}\n        view={view}\n        name=\"DEF Bonus\"\n        offset={4}\n      />\n      <InputDec\n        type={DataType.S8}\n        view={view}\n        name=\"MDF Bonus\"\n        offset={5}\n      />\n      <InputDec\n        type={DataType.S8}\n        view={view}\n        name=\"LCK Bonus\"\n        offset={6}\n      />\n\n      <BackTop>\n        <ToTopOutlined />\n      </BackTop>\n    </Space>\n  );\n}\n"],"names":["Text","Typography","InputDec","props","view","name","offset","type","currentValue","read","oldValue","setOldValue","useState","_jsxs","Space","children","_jsx","disabled","concat","InputNumber","_objectSpread","min","DataRange","max","onPressEnter","e","v","parseInt","target","value","write","defaultProps","InputSelect","Select","showSearch","style","width","placeholder","optionFilterProp","filterOption","input","option","label","includes","StatBonusPointers","FE7StatBonusesEditor","_StatBonusPointers$fi","buffer","useOutletContext","searchParams","setSearchParams","useSearchParams","id","get","DataView","error","direction","align","Alert","message","defaultValue","find","entry","toString","onSelect","options","DataType","S8","BackTop","ToTopOutlined"],"sourceRoot":""}