export const PaletteList = [
  { label: '0x00 None/Generic (Don\'t Edit)', value: 0 },
  { label: '0x01 Neimi (Archer)', value: 1 },
  { label: '0x02 Amelia (Knight)', value: 2 },
  { label: '0x03 Gilliam (Knight)', value: 3 },
  { label: '0x04 Breguet (Knight)', value: 4 },
  { label: '0x05 Saar (Knight)', value: 5 },
  { label: '0x06 Marisa (Assassin)', value: 6 },
  { label: '0x07 Colm (Assassin)', value: 7 },
  { label: '0x08 Joshua (Assassin)', value: 8 },
  { label: '0x09 Bone (Brigand)', value: 9 },
  { label: '0x0A Bazba (Brigand)', value: 10 },
  { label: '0x0B Artur (Bishop)', value: 11 },
  { label: '0x0C Natasha (Bishop)', value: 12 },
  { label: '0x0D Moulder (Bishop)', value: 13 },
  { label: '0x0E Riev (Bishop)', value: 14 },
  { label: '0x0F ???', value: 15 },
  { label: '0x10 Garcia (Hero)', value: 16 },
  { label: '0x11 Ross (Pirate)', value: 17 },
  { label: '0x12 Gerik (Hero)', value: 18 },
  { label: '0x13 Dozla (Berserker)', value: 19 },
  { label: '0x14 Ross (Berserker)', value: 20 },
  { label: '0x15 Tethys (Dancer)', value: 21 },
  { label: '0x16 Cormag (Wyvern Rider)', value: 22 },
  { label: '0x17 Cormag (Wyvern Lord)', value: 23 },
  { label: '0x18 Glen (Wyvern Lord)', value: 24 },
  { label: '0x19 Knoll (Druid)', value: 25 },
  { label: '0x1A Ewan (Druid)', value: 26 },
  { label: '0x1B Tana (FalcoKnight)', value: 27 },
  { label: '0x1C Vanessa (FalcoKnight)', value: 28 },
  { label: '0x1D Syrene (FalcoKnight)', value: 29 },
  { label: '0x1E Garcia (Fighter)', value: 30 },
  { label: '0x1F Ross (Fighter)', value: 31 },
  { label: '0x20 O\'Neill (Prologue)', value: 32 },
  { label: '0x21 Gerik (Ranger)', value: 33 },
  { label: '0x22 Neimi (Ranger)', value: 34 },
  { label: '0x23 Beran (Ranger)', value: 35 },
  { label: '0x24 Amelia (General)', value: 36 },
  { label: '0x25 Gilliam (General)', value: 37 },
  { label: '0x26 Vigarde (General)', value: 38 },
  { label: '0x27 Tirado (General)', value: 39 },
  { label: '0x28 Forde (Great Knight)', value: 40 },
  { label: '0x29 Franz (Great Knight)', value: 41 },
  { label: '0x2A Gilliam (Great Knight)', value: 42 },
  { label: '0x2B Kyle (Great Knight)', value: 43 },
  { label: '0x2C Amelia (Great Knight)', value: 44 },
  { label: '0x2D Duessel (Great Knight)', value: 45 },
  { label: '0x2E Aias (Great Knight)', value: 46 },
  { label: '0x2F Lute (Mage)', value: 47 },
  { label: '0x30 Ewan (Mage)', value: 48 },
  { label: '0x31 Gerik (Mercenary)', value: 49 },
  { label: '0x32 Zonta (Mercenary)', value: 50 },
  { label: '0x33 Ewan (Mage Knight)', value: 51 },
  { label: '0x34 L\'Arachel (Mage Knight)', value: 52 },
  { label: '0x35 Lute (Mage Knight)', value: 53 },
  { label: '0x36 Selena (Mage Knight)', value: 54 },
  { label: '0x37 Artur (Monk)', value: 55 },
  { label: '0x38 Joshua (Myrmidon)', value: 56 },
  { label: '0x39 Marisa (Myrmidon)', value: 57 },
  { label: '0x3A Amelia (Paladin)', value: 58 },
  { label: '0x3B Forde (Paladin)', value: 59 },
  { label: '0x3C Seth (Paladin)', value: 60 },
  { label: '0x3D Franz (Paladin)', value: 61 },
  { label: '0x3E Kyle (Paladin)', value: 62 },
  { label: '0x3F Orson (Paladin)', value: 63 },
  { label: '0x40 Vanessa (Peg Knight)', value: 64 },
  { label: '0x41 Tana (Peg Knight)', value: 65 },
  { label: '0x42 Ross (Hero)', value: 66 },
  { label: '0x43 Natasha (Cleric)', value: 67 },
  { label: '0x44 Colm (Rogue)', value: 68 },
  { label: '0x45 Moulder (Priest)', value: 69 },
  { label: '0x46 Rennac (Rogue)', value: 70 },
  { label: '0x47 Lute (Sage)', value: 71 },
  { label: '0x48 Artur (Sage)', value: 72 },
  { label: '0x49 Ewan (Sage)', value: 73 },
  { label: '0x4A ???', value: 74 },
  { label: '0x4B Moulder (Sage)', value: 75 },
  { label: '0x4C Saleh (Sage)', value: 76 },
  { label: '0x4D Ewan (Druid)', value: 77 },
  { label: '0x4E Knoll (Shaman)', value: 78 },
  { label: '0x4F Novala (Shaman)', value: 79 },
  { label: '0x50 Ewan (Summoner)', value: 80 },
  { label: '0x51 Knoll (Summoner)', value: 81 },
  { label: '0x52 Innes (Sniper)', value: 82 },
  { label: '0x53 Neimi (Sniper)', value: 83 },
  { label: '0x54 Amelia (Cavalier)', value: 84 },
  { label: '0x55 Franz (Cavalier)', value: 85 },
  { label: '0x56 Kyle (Cavalier)', value: 86 },
  { label: '0x57 Forde (Cavalier)', value: 87 },
  { label: '0x58 Murray (Cavalier)', value: 88 },
  { label: '0x59 Ismaire (Swordmaster)', value: 89 },
  { label: '0x5A Hayden (Ranger)', value: 90 },
  { label: '0x5B Fado (General)', value: 91 },
  { label: '0x5C Joshua (Swordmaster)', value: 92 },
  { label: '0x5D Marisa (Swordmaster)', value: 93 },
  { label: '0x5E Colm (Thief)', value: 94 },
  { label: '0x5F Carlyle (Swordmaster)', value: 95 },
  { label: '0x60 L\'Arachel (Valkyrie)', value: 96 },
  { label: '0x61 Natasha (Valkyrie)', value: 97 },
  { label: '0x62 L\'Arachel (Troubadour)', value: 98 },
  { label: '0x63 Garcia (Warrior)', value: 99 },
  { label: '0x64 Ross (Warrior)', value: 100 },
  { label: '0x65 Binks (Warrior)', value: 101 },
  { label: '0x66 Tana (WyvernKnight)', value: 102 },
  { label: '0x67 Vanessa (WyvernKnight)', value: 103 },
  { label: '0x68 Cormag (WyvernKnight)', value: 104 },
  { label: '0x69 Valter (WyvernKnight)', value: 105 },
  { label: '0x6A Gheb (Berserker)', value: 106 },
  { label: '0x6B Pablo (Sage)', value: 107 },
  { label: '0x6C Caellach (Hero)', value: 108 },
  { label: '0x6D (Something beyond point?)', value: 109 },
  { label: '0x6E', value: 110 },
  { label: '0x6F', value: 111 },
  { label: '0x70', value: 112 },
  { label: '0x71', value: 113 },
  { label: '0x72', value: 114 },
  { label: '0x73', value: 115 },
  { label: '0x74', value: 116 },
  { label: '0x75', value: 117 },
  { label: '0x76', value: 118 },
  { label: '0x77', value: 119 },
  { label: '0x78', value: 120 },
  { label: '0x79', value: 121 },
  { label: '0x7A', value: 122 },
  { label: '0x7B', value: 123 },
  { label: '0x7C', value: 124 },
  { label: '0x7D', value: 125 },
  { label: '0x7E', value: 126 },
  { label: '0x7F', value: 127 },
  { label: '0x80', value: 128 },
  { label: '0x81', value: 129 },
  { label: '0x82', value: 130 },
  { label: '0x83', value: 131 },
  { label: '0x84', value: 132 },
  { label: '0x85', value: 133 },
  { label: '0x86', value: 134 },
  { label: '0x87', value: 135 },
  { label: '0x88', value: 136 },
  { label: '0x89', value: 137 },
  { label: '0x8A', value: 138 },
  { label: '0x8B', value: 139 },
  { label: '0x8C', value: 140 },
  { label: '0x8D', value: 141 },
  { label: '0x8E', value: 142 },
  { label: '0x8F', value: 143 },
  { label: '0x90', value: 144 },
  { label: '0x91', value: 145 },
  { label: '0x92', value: 146 },
  { label: '0x93', value: 147 },
  { label: '0x94', value: 148 },
  { label: '0x95', value: 149 },
  { label: '0x96', value: 150 },
  { label: '0x97', value: 151 },
  { label: '0x98', value: 152 },
  { label: '0x99', value: 153 },
  { label: '0x9A', value: 154 },
  { label: '0x9B', value: 155 },
  { label: '0x9C', value: 156 },
  { label: '0x9D', value: 157 },
  { label: '0x9E', value: 158 },
  { label: '0x9F', value: 159 },
  { label: '0xA0', value: 160 },
  { label: '0xA1', value: 161 },
  { label: '0xA2', value: 162 },
  { label: '0xA3', value: 163 },
  { label: '0xA4', value: 164 },
  { label: '0xA5', value: 165 },
  { label: '0xA6', value: 166 },
  { label: '0xA7', value: 167 },
  { label: '0xA8', value: 168 },
  { label: '0xA9', value: 169 },
  { label: '0xAA', value: 170 },
  { label: '0xAB', value: 171 },
  { label: '0xAC', value: 172 },
  { label: '0xAD', value: 173 },
  { label: '0xAE', value: 174 },
  { label: '0xAF', value: 175 },
  { label: '0xB0', value: 176 },
  { label: '0xB1', value: 177 },
  { label: '0xB2', value: 178 },
  { label: '0xB3', value: 179 },
  { label: '0xB4', value: 180 },
  { label: '0xB5', value: 181 },
  { label: '0xB6', value: 182 },
  { label: '0xB7', value: 183 },
  { label: '0xB8', value: 184 },
  { label: '0xB9', value: 185 },
  { label: '0xBA', value: 186 },
  { label: '0xBB', value: 187 },
  { label: '0xBC', value: 188 },
  { label: '0xBD', value: 189 },
  { label: '0xBE', value: 190 },
  { label: '0xBF', value: 191 },
  { label: '0xC0', value: 192 },
  { label: '0xC1', value: 193 },
  { label: '0xC2', value: 194 },
  { label: '0xC3', value: 195 },
  { label: '0xC4', value: 196 },
  { label: '0xC5', value: 197 },
  { label: '0xC6', value: 198 },
  { label: '0xC7', value: 199 },
  { label: '0xC8', value: 200 },
  { label: '0xC9', value: 201 },
  { label: '0xCA', value: 202 },
  { label: '0xCB', value: 203 },
  { label: '0xCC', value: 204 },
  { label: '0xCD', value: 205 },
  { label: '0xCE', value: 206 },
  { label: '0xCF', value: 207 },
  { label: '0xD0', value: 208 },
  { label: '0xD1', value: 209 },
  { label: '0xD2', value: 210 },
  { label: '0xD3', value: 211 },
  { label: '0xD4', value: 212 },
  { label: '0xD5', value: 213 },
  { label: '0xD6', value: 214 },
  { label: '0xD7', value: 215 },
  { label: '0xD8', value: 216 },
  { label: '0xD9', value: 217 },
  { label: '0xDA', value: 218 },
  { label: '0xDB', value: 219 },
  { label: '0xDC', value: 220 },
  { label: '0xDD', value: 221 },
  { label: '0xDE', value: 222 },
  { label: '0xDF', value: 223 },
  { label: '0xE0', value: 224 },
  { label: '0xE1', value: 225 },
  { label: '0x62', value: 226 },
  { label: '0xE3', value: 227 },
  { label: '0xE4', value: 228 },
  { label: '0xE5', value: 229 },
  { label: '0xE6', value: 230 },
  { label: '0xE7', value: 231 },
  { label: '0xE8', value: 232 },
  { label: '0xE9', value: 233 },
  { label: '0xEA', value: 234 },
  { label: '0xEB', value: 235 },
  { label: '0xEC', value: 236 },
  { label: '0xED', value: 237 },
  { label: '0xEE', value: 238 },
  { label: '0xEF', value: 239 },
  { label: '0xF0', value: 240 },
  { label: '0xF1', value: 241 },
  { label: '0xF2', value: 242 },
  { label: '0xF3', value: 243 },
  { label: '0xF4', value: 244 },
  { label: '0xF5', value: 245 },
  { label: '0xF6', value: 246 },
  { label: '0xF7', value: 247 },
  { label: '0xF8', value: 248 },
  { label: '0xF9', value: 249 },
  { label: '0xFA', value: 250 },
  { label: '0xFB', value: 251 },
  { label: '0xFC', value: 252 },
  { label: '0xFD', value: 253 },
  { label: '0xFE', value: 254 },
  { label: '0xFF', value: 255 },
];

export default PaletteList;
